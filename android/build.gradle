
// Top-level build file where you can add configuration options common to all sub-projects/modules.
// ...existing code...
buildscript {

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.7.2'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.24"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

subprojects { proj ->
  // Força Kotlin jvmTarget = 17 em QUALQUER módulo que use Kotlin (inclui :capacitor-community-admob)
  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach { t ->
    t.kotlinOptions {
      jvmTarget = '17'
      // Se algum plugin injetar --release 21 (raro no Kotlin), removemos por segurança
      freeCompilerArgs = (freeCompilerArgs ?: []).findAll { it != '--release' && !it.startsWith('--release') }
    }
  }

  // Para módulos Android (application/library), força source/targetCompatibility = 17 (sem --release)
  afterEvaluate {
    def androidExt = proj.extensions.findByName("android")
    if (androidExt != null) {
      androidExt.compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
      }
      // Alguns plugins expõem kotlinOptions via extensão; ajusta se existir
      if (proj.hasProperty('kotlinOptions')) {
        proj.kotlinOptions.jvmTarget = '17'
      }
    } else {
      // Módulos Java puros, se existirem
      tasks.withType(JavaCompile).configureEach {
        options.compilerArgs.removeAll { it == '--release' || it.startsWith('--release') }
        sourceCompatibility = JavaVersion.VERSION_17.toString()
        targetCompatibility = JavaVersion.VERSION_17.toString()
      }
    }
  }
}
apply from: "variables.gradle"

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


